diff --git a/modules/feeds/plugins/FeedsFileFetcher.inc b/modules/feeds/plugins/FeedsFileFetcher.inc
index 2a82cea..04fb26f 100644
--- a/modules/feeds/plugins/FeedsFileFetcher.inc
+++ b/modules/feeds/plugins/FeedsFileFetcher.inc
@@ -98,13 +98,13 @@ class FeedsFileFetcher extends FeedsFetcher {
       file_set_status($file, FILE_STATUS_PERMANENT);
       $values['source'] = $file->filepath;
     }
-    elseif (empty($values['source'])) {
+    elseif (empty($values['source']) && $this->config['source_required']) {
       form_set_error('feeds][source', t('Upload a file first.'));
     }
     // If a file has not been uploaded and $values['source'] is not empty, make
     // sure that this file is within Drupal's files directory as otherwise
     // potentially any file that the web server has access could be exposed.
-    elseif (!file_check_location($values['source'], file_directory_path())) {
+    elseif (!file_check_location($values['source'], file_directory_path()) && $this->config['source_required']) {
       form_set_error('feeds][source', t('File needs to point to a file in your Drupal file system path.'));
     }
   }
@@ -115,6 +115,7 @@ class FeedsFileFetcher extends FeedsFetcher {
   public function configDefaults() {
     return array(
       'direct' => FALSE,
+      'source_required' => TRUE,
     );
   }
 
@@ -129,6 +130,13 @@ class FeedsFileFetcher extends FeedsFetcher {
       '#description' => t('For experts. If checked users can specify a path to a file when importing rather than uploading a file. This is useful when files to be imported are already present on server.'),
       '#default_value' => $this->config['direct'],
     );
+    $form['source_required'] = array(
+      '#type' =>'checkbox',
+      '#title' => t('Path or uploaded file is required for saving'),
+      '#description' => t('If unchecked users can save a node without uploading a file or specifying a path.'),
+      '#default_value' => $this->config['source_required'],
+    );
+
     return $form;
   }
 }
